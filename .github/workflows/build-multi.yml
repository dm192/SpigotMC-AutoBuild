name: Spigot 多版本自动构建
# 描述：自动构建 Spigot 多个版本的 Jar 包，并生成 Release

# 声明权限，确保 upload/download artifact 可以正常执行
permissions:
  contents: write        # 用于 checkout、download-artifact、create tag 等
  actions: write        # 用于 upload-artifact、download-artifact

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'  # 每日 UTC 0:00（北京时间 8:00）自动触发

jobs:
  build:
    name: 🚧 矩阵构建所有版本
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - spigot_version: '1.8.8'
            java_version: '8'
          - spigot_version: '1.12.2'
            java_version: '8'
          - spigot_version: '1.17.1'
            java_version: '17'
          - spigot_version: '1.20.4'
            java_version: '21'
          - spigot_version: '1.21.1'
            java_version: '21'

    steps:
      - name: ✔️ Checkout 代码
        uses: actions/checkout@v4

      - name: 🧹 清理 Maven 本地缓存
        run: rm -rf ~/.m2/repository

      - name: 🌐 下载最新 BuildTools.jar
        run: |
          wget --retry-connrefused --retry-on-http-error=429,500,502,503,504 \
               --waitretry=5 -O BuildTools.jar \
               https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar

      - name: ☕ 设置 Zulu JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}

      - name: 🚀 编译 Spigot ${{ matrix.spigot_version }}
        run: |
          java -jar BuildTools.jar --rev "${{ matrix.spigot_version }}"

      - name: 🔍 找到生成的 Jar
        id: rename_jar
        run: |
          ORIGINAL_JAR=$(ls spigot-*.jar | head -n1)
          NEW_JAR="spigot-${{ matrix.spigot_version }}.jar"
          if [ "$ORIGINAL_JAR" != "$NEW_JAR" ]; then
            mv "$ORIGINAL_JAR" "$NEW_JAR"
          fi
          echo "jar_name=$NEW_JAR" >> $GITHUB_OUTPUT

      - name: 🔐 生成 Jar 的 SHA256 校验文件
        run: |
          JAR="${{ steps.rename_jar.outputs.jar_name }}"
          sha256sum "$JAR" > "${JAR}.sha256"

      - name: 📦 上传构建产物（Artifact）
        uses: actions/upload-artifact@v4
        with:
          name: jar-${{ matrix.spigot_version }}
          path: |
            ${{ steps.rename_jar.outputs.jar_name }}
            ${{ steps.rename_jar.outputs.jar_name }}.sha256

  release:
    name: 🏷️ 上传至 Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: ✔️ Checkout 代码
        uses: actions/checkout@v4
        
      - name: ⏱️ 获取时间戳
        id: datetime
        run: |
          NOW=$(date -d '+8 hour' +'%Y%m%d-%H%M%S')
          echo "timestamp=$NOW" >> $GITHUB_OUTPUT

      - name: 📥 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: ./collected-jars

      - name: 📋 生成版本列表 Markdown
        id: gen_versions
        run: |
          VERSIONS_MD=""
          for jar in collected-jars/spigot-*.jar; do
            filename=$(basename "$jar")
            ver=${filename#spigot-}
            ver=${ver%.jar}
            VERSIONS_MD="$VERSIONS_MD- $ver\n"
          done
          # 去掉最后一个换行符
          VERSIONS_MD="${VERSIONS_MD%\\n}"
          echo "versions_md<<EOF" >> $GITHUB_OUTPUT
          echo -e "$VERSIONS_MD" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🏷️ 创建 GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="AutoBuild-${{ steps.datetime.outputs.timestamp }}"
          RELEASE_NAME="AutoBuild-${{ steps.datetime.outputs.timestamp }}"
          BODY="🎉 **自动构建完成！**\n\n"
          BODY+="- **构建时间（北京时间）**：${{ steps.datetime.outputs.timestamp }}\n"
          BODY+="- **包含版本**：\n"
          BODY+="${{ steps.gen_versions.outputs.versions_md }}\n\n"
          BODY+="- **校验文件**：每个 Jar 都生成了对应的 SHA256（.sha256），下载之后可自行校验。\n"
          BODY+="- **下载方式**：点击上方 Release 名称，所有 Jar + 校验文件都在附件里。\n"

          echo -e "$BODY"
          # 创建 Release（--repo 默认使用 GITHUB_REPOSITORY）
          gh release create "$TAG" --title "$RELEASE_NAME" --notes "$BODY"

      - name: 📦 上传所有版本和校验文件到 Release
        run: |
          TAG="AutoBuild-${{ steps.datetime.outputs.timestamp }}"
          for file in ./collected-jars/spigot-*.jar ./collected-jars/spigot-*.sha256; do
            fname=$(basename "$file")
            echo "上传 $fname 到 Release..."
            gh release upload "$TAG" "$file" --repo "$GITHUB_REPOSITORY"
          done

      - name: ✅ 完成
        run: |
          echo "✨ 发布完成：Release AutoBuild-${{ steps.datetime.outputs.timestamp }} 包含以下版本："
          echo -e "${{ steps.gen_versions.outputs.versions_md }}"
